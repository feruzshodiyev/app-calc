{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","component/App.js","logic/calculate.js","logic/isNumber.js","serviceWorker.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","value","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","src_component_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","concat","App","state","total","next","setState","obj","test","result","includes","parseFloat","calculate","src_component_Display","src_component_ButtonPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_component_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qTAmBeA,0LAZP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,WAAME,KAAKC,MAAMC,eAJXC,cCyBPC,oNAzBXC,YAAa,WACTC,EAAKL,MAAMM,aAAaD,EAAKL,MAAMO,+EAGvC,IAAMT,EAAY,CACd,mBACAC,KAAKC,MAAMQ,OAAS,SAAW,GAC/BT,KAAKC,MAAMS,KAAO,OAAS,IAG/B,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,EAAUY,KAAK,KAAKC,QAChChB,EAAAC,EAAAC,cAAA,UAAQe,QAASb,KAAKK,aAAcL,KAAKC,MAAMO,cAbtCL,cC+CNW,oNA5CXT,YAAa,SAAAU,GACTT,EAAKL,MAAMM,aAAaQ,4EAGxB,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,KAAKD,aAAcP,KAAKK,cACrCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,MAAMD,aAAcP,KAAKK,cACtCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,OAAID,aAAcP,KAAKK,YAAaI,QAAM,KAEvDb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,YAAaI,QAAM,KAE3Db,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,YAAaI,QAAM,KAE3Db,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,YAAaI,QAAM,KAE3Db,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,YAAaK,MAAI,IACrDd,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,cACpCT,EAAAC,EAAAC,cAACkB,EAAD,CAAQR,KAAK,IAAID,aAAcP,KAAKK,YAAaI,QAAM,aAlCjDN,8BCJX,SAASc,EAAQC,EAAWC,EAAWC,GAClD,IAAMC,EAAMC,IAAIJ,GAAa,KACvBK,EAAMD,IAAIH,GAAa,KAC7B,GAAkB,MAAdC,EACA,OAAOC,EAAIG,KAAKD,GAAKE,WAEzB,GAAkB,MAAdL,EACA,OAAOC,EAAIK,MAAMH,GAAKE,WAE1B,GAAkB,MAAdL,EACA,OAAOC,EAAIM,MAAMJ,GAAKE,WAE1B,GAAkB,SAAdL,EACA,MAAY,MAARG,GACAK,MAAM,qBACC,KAEAP,EAAIQ,IAAIN,GAAKE,WAG5B,MAAMK,MAAK,sBAAAC,OAAuBX,EAAvB,gBCQAY,6MArBPC,MAAM,CACFC,MAAO,KACPC,KAAM,KACNf,UAAW,QAGff,YAAc,SAAAU,GACVT,EAAK8B,SCXF,SAAmBC,EAAKtB,GACnC,GAAmB,OAAfA,EACA,MAAO,CACHmB,MAAO,KACPC,KAAM,KACNf,UAAW,MAInB,GCbO,SAASkB,KDaHvB,GACT,MAAiB,MAAbA,GAA6B,MAAXsB,EAAIF,KACf,GAGPE,EAAIjB,UACAiB,EAAIF,KACG,CAACA,KAAME,EAAIF,KAAOpB,GAEtB,CAACoB,KAAMpB,GAIdsB,EAAIF,KACG,CACHA,KAAME,EAAIF,KAAKpB,EACfmB,MAAO,MAGR,CACHC,KAAMpB,EACNmB,MAAO,MAIf,GAAiB,MAAbnB,EAAiB,CACjB,GAAIsB,EAAIjB,WAAWiB,EAAIF,KAAK,CACxB,IAAMI,EAAStB,EAAQoB,EAAIH,MAAOG,EAAIF,KAAME,EAAIjB,WAChD,MAAO,CACHc,MAAOZ,IAAIiB,GACNV,IAAIP,IAAI,QACRG,WACLU,KAAM,KACNf,UAAW,MAGnB,OAAIiB,EAAIF,KACG,CACHA,KAAMb,IAAIe,EAAIF,MACTN,IAAIP,IAAI,QACRG,YAGN,GAGX,MAAmB,MAAfV,EACIsB,EAAIF,KAEAE,EAAIF,KAAKK,SAAS,KACX,GAEJ,CAAEL,KAAME,EAAIF,KAAO,KAEvB,CAAEA,KAAM,MAGA,MAAfpB,EACIsB,EAAIF,MAAQE,EAAIjB,UACT,CACHc,MAAOjB,EAAQoB,EAAIH,MAAOG,EAAIF,KAAME,EAAIjB,WACxCe,KAAM,KACNf,UAAW,MAIR,GAIC,QAAbL,EACKsB,EAAIF,KACG,CAACA,OAAQ,EAAEM,WAAWJ,EAAIF,OAAOV,YAExCY,EAAIH,MACG,CAACA,QAAQ,EAAEO,WAAWJ,EAAIH,QAAQT,YAEtC,GAGPY,EAAIjB,UACG,CACHc,MAAOjB,EAAQoB,EAAIH,MAAMG,EAAIF,KAAME,EAAIjB,WACvCe,KAAM,KACNf,UAAWL,GAKdsB,EAAIF,KAKF,CACHD,MAAOG,EAAIF,KACXA,KAAM,KACNf,UAAWL,GAPJ,CAAEK,UAAWL,GDxFF2B,CAAUpC,EAAK2B,MAAOlB,6EAKxC,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC6C,EAAD,CAASzC,MAAOF,KAAKiC,MAAME,MAAQnC,KAAKiC,MAAMC,OAAO,MACrDtC,EAAAC,EAAAC,cAAC8C,EAAD,CAAarC,aAAcP,KAAKK,sBAlB9BF,aGIE0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SDkH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f59db189.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./Display.css\"\r\n\r\nclass Display extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"component-display\">\r\n                <div>{this.props.value}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDisplay.propTypes = {\r\n    value: PropTypes.string,\r\n};\r\n\r\nexport default Display;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Button.css\"\r\n\r\nclass Button extends Component{\r\n    handleClick =() =>{\r\n        this.props.clickHandler(this.props.name)\r\n    };\r\nrender() {\r\n    const className = [\r\n        \"component-button\",\r\n        this.props.orange ? \"orange\" : \"\",\r\n        this.props.wide ? \"wide\" : \"\",\r\n\r\n    ];\r\n    return(\r\n        <div className={className.join(\" \").trim()}>\r\n            <button onClick={this.handleClick}>{this.props.name}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n};\r\nButton.propTypes = {\r\n    name: PropTypes.string,\r\n    orange: PropTypes.bool,\r\n    wide: PropTypes.bool,\r\n    clickHandler: PropTypes.func\r\n};\r\nexport default Button;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from \"./Button\"\r\nimport \"./ButtonPanel.css\";\r\n\r\nclass ButtonPanel extends Component {\r\n    handleClick =buttonName=>{\r\n        this.props.clickHandler(buttonName);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"component-button-panel\">\r\n                <div>\r\n                <Button name=\"AC\" clickHandler={this.handleClick}/>\r\n                <Button name=\"+/-\" clickHandler={this.handleClick}/>\r\n                <Button name=\"%\" clickHandler={this.handleClick} />\r\n                <Button name=\"รท\" clickHandler={this.handleClick} orange />\r\n                </div>\r\n                <div>\r\n                    <Button name=\"7\" clickHandler={this.handleClick} />\r\n                    <Button name=\"8\" clickHandler={this.handleClick} />\r\n                    <Button name=\"9\" clickHandler={this.handleClick} />\r\n                    <Button name=\"x\" clickHandler={this.handleClick} orange />\r\n                </div>\r\n                <div>\r\n                    <Button name=\"4\" clickHandler={this.handleClick} />\r\n                    <Button name=\"5\" clickHandler={this.handleClick} />\r\n                    <Button name=\"6\" clickHandler={this.handleClick} />\r\n                    <Button name=\"-\" clickHandler={this.handleClick} orange />\r\n                </div>\r\n                <div>\r\n                    <Button name=\"1\" clickHandler={this.handleClick} />\r\n                    <Button name=\"2\" clickHandler={this.handleClick} />\r\n                    <Button name=\"3\" clickHandler={this.handleClick} />\r\n                    <Button name=\"+\" clickHandler={this.handleClick} orange />\r\n                </div>\r\n                <div>\r\n                    <Button name=\"0\" clickHandler={this.handleClick} wide />\r\n                    <Button name=\".\" clickHandler={this.handleClick} />\r\n                    <Button name=\"=\" clickHandler={this.handleClick} orange />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nButtonPanel.propTypes = {\r\n    clickHandler: PropTypes.func,\r\n};\r\n\r\nexport default ButtonPanel;","import Big from \"big.js\";\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n    const one = Big(numberOne || \"0\");\r\n    const two = Big(numberTwo || \"0\");\r\n    if (operation === \"+\") {\r\n        return one.plus(two).toString();\r\n    }\r\n    if (operation === \"-\") {\r\n        return one.minus(two).toString();\r\n    }\r\n    if (operation === \"x\") {\r\n        return one.times(two).toString();\r\n    }\r\n    if (operation === \"รท\") {\r\n        if (two === \"0\") {\r\n            alert('Divide by 0 error');\r\n            return \"0\";\r\n        } else {\r\n            return one.div(two).toString();\r\n        }\r\n    }\r\n    throw Error(`Unknown operation '${operation}'`);\r\n}","import React, {Component} from 'react';\r\nimport Display from './Display';\r\nimport ButtonPanel from './ButtonPanel';\r\nimport calculate from '../logic/calculate';\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n\r\n        state={\r\n            total: null,\r\n            next: null,\r\n            operation: null,\r\n        };\r\n\r\n        handleClick = buttonName =>{\r\n            this.setState(calculate(this.state, buttonName));\r\n        }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-app\">\r\n                <Display value={this.state.next || this.state.total||\"0\"}/>\r\n                <ButtonPanel clickHandler={this.handleClick}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import Big from 'big.js';\r\n\r\nimport operate from './operate.js';\r\nimport isNumber from './isNumber.js';\r\n\r\nexport default function calculate(obj, buttonName) {\r\n    if (buttonName === \"AC\"){\r\n        return {\r\n            total: null,\r\n            next: null,\r\n            operation: null,\r\n        };\r\n    }\r\n//\r\n    if (isNumber(buttonName)){\r\n        if (buttonName===\"0\"&&obj.next===\"0\"){\r\n            return {};\r\n        }\r\n\r\n        if (obj.operation){\r\n            if (obj.next){\r\n                return {next: obj.next + buttonName};\r\n            };\r\n            return {next: buttonName}\r\n        }\r\n        //\r\n\r\n        if (obj.next){\r\n            return {\r\n                next: obj.next+buttonName,\r\n                total: null,\r\n            };\r\n        }\r\n        return {\r\n            next: buttonName,\r\n            total: null,\r\n        };\r\n    }\r\n    \r\n    if (buttonName===\"%\"){\r\n        if (obj.operation&&obj.next){\r\n            const result = operate(obj.total, obj.next, obj.operation);\r\n            return {\r\n                total: Big(result)\r\n                    .div(Big(\"100\"))\r\n                    .toString(),\r\n                next: null,\r\n                operation: null,\r\n            };\r\n        }   \r\n        if (obj.next){\r\n            return {\r\n                next: Big(obj.next)\r\n                    .div(Big(\"100\"))\r\n                    .toString(),\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    \r\n    if (buttonName === \".\"){\r\n        if (obj.next) {\r\n\r\n            if (obj.next.includes(\".\")) {\r\n                return {};\r\n            }\r\n            return { next: obj.next + \".\" };\r\n        }\r\n        return { next: \"0.\" };\r\n    }\r\n\r\n    if (buttonName === \"=\"){\r\n        if (obj.next && obj.operation) {\r\n            return {\r\n                total: operate(obj.total, obj.next, obj.operation),\r\n                next: null,\r\n                operation: null,\r\n            };\r\n        } else {\r\n            // '=' with no operation\r\n            return {};\r\n        }\r\n    }\r\n\r\n    if(buttonName===\"+/-\"){\r\n        if (obj.next){\r\n            return {next: (-1*parseFloat(obj.next)).toString()};\r\n        }\r\n        if (obj.total){\r\n            return {total:(-1*parseFloat(obj.total)).toString()};\r\n        }\r\n        return {};\r\n    }\r\n    \r\n    if (obj.operation){\r\n        return {\r\n            total: operate(obj.total,obj.next, obj.operation),\r\n            next: null,\r\n            operation: buttonName,\r\n        };\r\n    }\r\n\r\n    // The user hasn't typed a number yet, just save the operation\r\n    if (!obj.next) {\r\n        return { operation: buttonName };\r\n    }\r\n\r\n    // save the operation and shift 'next' into 'total'\r\n    return {\r\n        total: obj.next,\r\n        next: null,\r\n        operation: buttonName,\r\n    };\r\n\r\n\r\n\r\n}","export default function  isNumber(item) {\r\n    return /[0-9]+/.test(item);\r\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./component/App\";\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();"],"sourceRoot":""}